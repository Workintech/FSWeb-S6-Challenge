{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90546\\\\Projects\\\\React proje\\\\FSWeb-S6-Challenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Karakter from \"./components/Karakter\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [charactersData, setCharactersData] = useState([]);\n  const [filmsData, setFilmsData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const charPerPage = 4;\n  useEffect(() => {\n    axios.all([axios.get(`https://swapi.dev/api/people/`), axios.get(`https://swapi.dev/api/films/`)]).then(axios.spread((res1, res2) => {\n      // console.log(res1);\n      // console.log(res2);\n      return [res1.data, res2.data[0].results];\n    })).catch(err => console.log(\"Hata ile karsilasildi >\", err)).then(_ref => {\n      let [data1, data2] = _ref;\n      console.log(\"data cekildi chars>\", data1);\n      console.log(\"data cekildi films>\", data2);\n      setCharactersData(data1);\n      setFilmsData(data2);\n    });\n  }, []);\n  const handleChange = (evt, val) => {\n    setPage(val);\n  };\n  const handleSearch = evt => {\n    setSearchText(evt.target.value);\n  };\n\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  // console.log(charactersData.slice(0, 2));\n  // console.log(charactersData.slice(2, 4));\n  // console.log(charactersData.slice(4, 6));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      onChange: handleSearch,\n      label: \"Search\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), charactersData && charactersData.filter(char => char.name.includes(searchText)).slice(charPerPage * (page - 1), charPerPage * page).map((char, index) => {\n      return /*#__PURE__*/_jsxDEV(Karakter, {\n        char: char,\n        films: filmsData.filter(film => char.films.includes(film.title))\n      }, \"C\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: Math.ceil(charactersData.length / charPerPage),\n      page: page,\n      onChange: handleChange,\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jTq6DDKRTrK8Z1PS8+88qAuL5vA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Karakter","Pagination","TextField","jsxDEV","_jsxDEV","App","_s","charactersData","setCharactersData","filmsData","setFilmsData","page","setPage","searchText","setSearchText","charPerPage","all","get","then","spread","res1","res2","data","results","catch","err","console","log","_ref","data1","data2","handleChange","evt","val","handleSearch","target","value","className","children","id","onChange","label","variant","fileName","_jsxFileName","lineNumber","columnNumber","filter","char","name","includes","slice","map","index","films","film","title","count","Math","ceil","length","color","_c","$RefreshReg$"],"sources":["C:/Users/90546/Projects/React proje/FSWeb-S6-Challenge/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Karakter from \"./components/Karakter\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst App = () => {\r\n  const [charactersData, setCharactersData] = useState([]);\r\n  const [filmsData, setFilmsData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const charPerPage = 4;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .all([\r\n        axios.get(`https://swapi.dev/api/people/`),\r\n        axios.get(`https://swapi.dev/api/films/`),\r\n      ])\r\n      .then(\r\n        axios.spread((res1, res2) => {\r\n          // console.log(res1);\r\n          // console.log(res2);\r\n          return [res1.data, res2.data[0].results];\r\n        })\r\n      )\r\n      .catch((err) => console.log(\"Hata ile karsilasildi >\", err))\r\n      .then(([data1, data2]) => {\r\n        console.log(\"data cekildi chars>\", data1);\r\n        console.log(\"data cekildi films>\", data2);\r\n        setCharactersData(data1);\r\n        setFilmsData(data2);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (evt, val) => {\r\n    setPage(val);\r\n  };\r\n  const handleSearch = (evt) => {\r\n    setSearchText(evt.target.value);\r\n  };\r\n\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a\r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  // console.log(charactersData.slice(0, 2));\r\n  // console.log(charactersData.slice(2, 4));\r\n  // console.log(charactersData.slice(4, 6));\r\n  return (\r\n    <div className=\"App\">\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        onChange={handleSearch}\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n      />\r\n      {charactersData &&\r\n        charactersData\r\n          .filter((char) => char.name.includes(searchText))\r\n          .slice(charPerPage * (page - 1), charPerPage * page)\r\n          .map((char, index) => {\r\n            return (\r\n              <Karakter\r\n                key={\"C\" + index}\r\n                char={char}\r\n                films={filmsData.filter((film) =>\r\n                  char.films.includes(film.title)\r\n                )}\r\n              />\r\n            );\r\n          })}\r\n      <Pagination\r\n        count={Math.ceil(charactersData.length / charPerPage)}\r\n        page={page}\r\n        onChange={handleChange}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMiB,WAAW,GAAG,CAAC;EAErBlB,SAAS,CAAC,MAAM;IACdE,KAAK,CACFiB,GAAG,CAAC,CACHjB,KAAK,CAACkB,GAAG,CAAE,+BAA8B,CAAC,EAC1ClB,KAAK,CAACkB,GAAG,CAAE,8BAA6B,CAAC,CAC1C,CAAC,CACDC,IAAI,CACHnB,KAAK,CAACoB,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;MAC3B;MACA;MACA,OAAO,CAACD,IAAI,CAACE,IAAI,EAAED,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;IAC1C,CAAC,CAAC,CACH,CACAC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC,CAC3DP,IAAI,CAACU,IAAA,IAAoB;MAAA,IAAnB,CAACC,KAAK,EAAEC,KAAK,CAAC,GAAAF,IAAA;MACnBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,KAAK,CAAC;MACzCH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,KAAK,CAAC;MACzCtB,iBAAiB,CAACqB,KAAK,CAAC;MACxBnB,YAAY,CAACoB,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACjCrB,OAAO,CAACqB,GAAG,CAAC;EACd,CAAC;EACD,MAAMC,YAAY,GAAIF,GAAG,IAAK;IAC5BlB,aAAa,CAACkB,GAAG,CAACG,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlC,OAAA,CAACF,SAAS;MACRqC,EAAE,EAAC,gBAAgB;MACnBC,QAAQ,EAAEN,YAAa;MACvBO,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB,EACDvC,cAAc,IACbA,cAAc,CACXwC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACrC,UAAU,CAAC,CAAC,CAChDsC,KAAK,CAACpC,WAAW,IAAIJ,IAAI,GAAG,CAAC,CAAC,EAAEI,WAAW,GAAGJ,IAAI,CAAC,CACnDyC,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,KAAK;MACpB,oBACEjD,OAAA,CAACJ,QAAQ;QAEPgD,IAAI,EAAEA,IAAK;QACXM,KAAK,EAAE7C,SAAS,CAACsC,MAAM,CAAEQ,IAAI,IAC3BP,IAAI,CAACM,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;MAC/B,GAJG,GAAG,GAAGH,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKhB;IAEN,CAAC,CAAC,eACN1C,OAAA,CAACH,UAAU;MACTwD,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACpD,cAAc,CAACqD,MAAM,GAAG7C,WAAW,CAAE;MACtDJ,IAAI,EAAEA,IAAK;MACX6B,QAAQ,EAAET,YAAa;MACvB8B,KAAK,EAAC;IAAW;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACxC,EAAA,CA7EID,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AA+ET,eAAeA,GAAG;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}